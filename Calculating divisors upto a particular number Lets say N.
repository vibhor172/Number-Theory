Calculating divisors upto a particular number Lets say N.

------->//O(N*sqrt(N))


class Solution {
public:
    int countPrimes(int n) {
        int ans;
        ans=0;
        
        for(int j=n;j>=1;j++){int count;
                              count=0;
        for(int i=1;i*i<j;i++){
            if(n%i==0){
                count++;
            }
            if(i!=n/i){
                count++;
            }
        }
        if(count<2){ans++;}
    }
       return ans;                     
                           }
};


------->//More Optimised Version (iteration on multiples)

O(N*logN)

vector<int>div(n+1)
for(int i=1;i<=N;i++){
for(int j=i;j<=N;j+=i){div[j]++;}}

for(int i=1;i<=n;i++){
cout<<div[j];}


------>//Most Optimised Solution
O()




